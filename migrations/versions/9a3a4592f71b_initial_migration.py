"""Initial migration

Revision ID: 9a3a4592f71b
Revises: 
Create Date: 2025-10-06 19:11:04.359928

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlmodel.sql.sqltypes import AutoString


# revision identifiers, used by Alembic.
revision: str = '9a3a4592f71b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column(
                        'email', AutoString(), nullable=False),
                    sa.Column(
                        'name', AutoString(), nullable=False),
                    sa.Column('profile_image_url',
                              AutoString(), nullable=False),
                    sa.Column('password_hash',
                              AutoString(), nullable=False),
                    sa.Column('role', sa.VARCHAR(),
                              server_default='user', nullable=False),
                    sa.Column('refresh_token', sa.String(), nullable=True),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('blogs',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column(
                        'title', AutoString(), nullable=False),
                    sa.Column(
                        'body', AutoString(), nullable=False),
                    sa.Column('cover_image_url',
                              AutoString(), nullable=False),
                    sa.Column('like_count', sa.Integer(), nullable=False),
                    sa.Column('created_by', sa.Uuid(), nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('blog_likes',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('blog_id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('is_liked', sa.Boolean(), nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint(
                        'blog_id', 'user_id', name='uq_blog_user_like')
                    )
    op.create_table('comments',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column(
                        'content', AutoString(), nullable=False),
                    sa.Column('created_by', sa.Uuid(), nullable=False),
                    sa.Column('blog_id', sa.Uuid(), nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], ),
                    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comments')
    op.drop_table('blog_likes')
    op.drop_table('blogs')
    op.drop_table('users')
    # ### end Alembic commands ###
